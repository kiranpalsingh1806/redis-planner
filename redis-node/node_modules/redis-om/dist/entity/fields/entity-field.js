"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class EntityField {
    _name;
    _value = null;
    fieldDef;
    constructor(name, fieldDef, value) {
        this.fieldDef = fieldDef;
        this.value = value ?? null;
        this._name = name;
    }
    get name() {
        return this.fieldDef.alias ?? this._name;
    }
    get value() {
        return this._value;
    }
    set value(value) {
        this.validateValue(value);
        this._value = this.convertValue(value);
    }
    toRedisJson() {
        const data = {};
        if (this.value !== null)
            data[this.name] = this.value;
        return data;
    }
    fromRedisJson(value) {
        this.value = value;
    }
    toRedisHash() {
        const data = {};
        if (this.value !== null)
            data[this.name] = this.value.toString();
        return data;
    }
    fromRedisHash(value) {
        this.value = value;
    }
    validateValue(value) {
        if (value === undefined)
            throw Error(`Property cannot be set to undefined. Use null instead.`);
    }
    convertValue(value) {
        return value;
    }
    isString(value) {
        return typeof value === 'string';
    }
    isNumber(value) {
        return typeof value === 'number';
    }
    isBoolean(value) {
        return typeof value === 'boolean';
    }
}
exports.default = EntityField;
